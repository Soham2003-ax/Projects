# -*- coding: utf-8 -*-
"""Final Project AWP

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AnivPsUP4pCOP1XzH5X_Z34LiYi5AbU3
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

financials= pd.read_csv('/content/sample_data/Financials.csv')
financials.head()

# Strip whitespace from columns
financials.columns = financials.columns.str.strip()

# Define financial columns
money_columns = [
    'Units Sold', 'Manufacturing Price', 'Sale Price', 'Gross Sales',
    'Discounts', 'Sales', 'COGS', 'Profit']

# Clean currency symbols, commas, parentheses, and convert to float
for col in money_columns:
    financials[col] = (financials[col]
                       .astype(str)
                       .str.replace('(', '-', regex=False)
                       .str.replace(')', '', regex=False)
                       .str.replace('$', '', regex=False)
                       .str.replace(',', '', regex=False)
                       .str.strip()
                       .replace('-', '0')
                       .astype(float))

# Clean string columns
financials['Month Name'] = financials['Month Name'].str.strip()
financials['Product'] = financials['Product'].str.strip()

print(financials.shape)

print(financials.info())

print(financials.describe())

print(financials.isnull().sum())

"""### **Total Profit by Segment**"""

plt.figure(figsize=[18, 8])
plt.title('Bar Plot: Total Profit by Segment and Country\n', fontdict={'fontsize':36, 'fontweight':'bold'})
sns.barplot(data=financials, x='Segment', y='Profit', hue='Country', estimator='sum', palette='viridis')
plt.grid(True)
plt.show()

"""### **Top 5 Countries by Revenue**"""

plt.figure(figsize=[10, 10])
plt.title('Top 5 Countries by Revenue\n', fontdict={'fontsize':36, 'fontweight':'bold'})

plt.pie(
    financials.groupby('Country')['Sales'].sum().sort_values(ascending=False).head(5).values,
    labels=financials.groupby('Country')['Sales'].sum().sort_values(ascending=False).head(5).index,
    explode=[0.1, 0, 0, 0, 0],
    shadow=True,
    autopct='%1.1f%%',
    startangle=140
)

plt.axis('equal')
plt.show()

"""### **Sales vs Profit**"""

plt.figure(figsize=[18, 8])
plt.title('Scatter Plot: Sales vs Profit\n', fontdict={'fontsize':36, 'fontweight':'bold'})
sns.scatterplot(x='Sales', y='Profit', hue='Segment', data=financials, s=120)
plt.grid(True)
plt.show()

"""### **Distribution of Profit**"""

plt.figure(figsize=[18, 8])
plt.title('KDE Plot: Profit Distribution\n', fontdict={'fontsize':36, 'fontweight':'bold'})
sns.kdeplot(data=financials['Profit'], fill=True, color='green')
plt.grid(True)
plt.show()

"""### **Distribution of Sales**"""

plt.figure(figsize=[18, 8])
plt.title('Histogram: Sales Distribution\n', fontdict={'fontsize':36, 'fontweight':'bold'})
sns.histplot(financials['Sales'], bins=30, kde=True, color='orange', edgecolor='black')
plt.grid(True)
plt.show()

"""### **Correlation Heatmap**"""

plt.figure(figsize=(12, 8))
plt.title('Correlation Heatmap of Financial Metrics\n', fontdict={'fontsize':36, 'fontweight':'bold'})
sns.heatmap(financials[money_columns].corr(), annot=True, cmap='coolwarm', fmt='.2f')
plt.show()